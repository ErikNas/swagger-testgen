package [(${packageName})].tests.[(${tag})];

import io.qameta.allure.Param;
import io.qameta.allure.Story;
import io.qameta.allure.TmsLink;
import io.restassured.path.json.JsonPath;
import org.json.JSONObject;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import [(${packageName})].tests.BaseTest;

import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;

import static io.qameta.allure.model.Parameter.Mode.HIDDEN;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.text.MatchesPattern.matchesPattern;
import static org.junit.jupiter.params.provider.Arguments.of;
import static [(${packageName})].helpers.allure.AllureAssertions.assertEquals;
import static [(${packageName})].helpers.allure.AllureAssertions.assertThat;
import static [(${packageName})].helpers.allure.AllureHelper.setTmsLink;
import static [(${packageName})].helpers.api.Endpoints.[(${endpointVarName})];

@Story("POST [(${endpoint})]")
@DisplayName("POST [(${endpoint})]")
public class [(${testName})] extends BaseTest {
[# th:each="parameter: ${delete.path_parameters}"]
    String [(${parameter.name})];[/]

    @BeforeAll
    void setup() {
        // create object to delete
        [# th:each="parameter: ${delete.path_parameters}"]
        String [(${parameter.name})] = null;[/]
    }
    [# th:each="resp: ${delete.response_codes}"]
    @Test
    @TmsLink("TMSLINK-1234")
    @DisplayName("Корректный запрос")
    @Description("Проверка, что метод возвращает: [(${resp.description})]")
    void positiveTest() {
        api.delete(resp[(${resp.code})], [(${endpointVarName})], [# th:each="parameter: ${delete.path_parameters}"][(${parameter.name})][# th:unless="${parameterStat.last}"], [/][/]);
    }[/]
}